name: Full Release Pipeline

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write
  packages: write

jobs:
  release:
    name: Build, Train, Dockerize & Release (Cross-Platform)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Train model
        run: |
          VERSION="${GITHUB_REF_NAME}"
          python model/train.py \
            --version $VERSION \
            --out model/model.joblib \
            --metrics out/metrics.json \
            --seed 42

      - name: Auto-generate changelog
        id: changelog
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0 HEAD^ || echo "")
          echo "## ${GITHUB_REF_NAME} â€” $(date +'%Y-%m-%d')" > temp_changelog.md
          git log $LAST_TAG..HEAD --pretty=format:'- %s (%an)' >> temp_changelog.md
          echo "" >> temp_changelog.md
          cat CHANGELOG.md >> temp_changelog.md
          mv temp_changelog.md CHANGELOG.md
          git add CHANGELOG.md
          git commit -m "chore: update CHANGELOG for ${{ github.ref_name }}" || echo "No changes to commit"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push multi-arch Docker image
        run: |
          REPO_OWNER=$(echo "${GITHUB_REPOSITORY_OWNER}" | tr '[:upper:]' '[:lower:]')
          REPO_NAME=$(echo "${GITHUB_REPOSITORY}" | cut -d/ -f2 | tr '[:upper:]' '[:lower:]')
          TAG=$(echo "${GITHUB_REF_NAME}" | tr '[:upper:]' '[:lower:]')
          IMAGE_VERSION="ghcr.io/$REPO_OWNER/$REPO_NAME:$TAG"
          IMAGE_LATEST="ghcr.io/$REPO_OWNER/$REPO_NAME:latest"

          echo "Building and pushing Docker image: $IMAGE_VERSION"
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --build-arg MODEL_VERSION=$TAG \
            -t $IMAGE_VERSION \
            -t $IMAGE_LATEST \
            --push .

      - name: Smoke test container
        run: |
          REPO_OWNER=$(echo "${GITHUB_REPOSITORY_OWNER}" | tr '[:upper:]' '[:lower:]')
          REPO_NAME=$(echo "${GITHUB_REPOSITORY}" | cut -d/ -f2 | tr '[:upper:]' '[:lower:]')
          TAG=$(echo "${GITHUB_REF_NAME}" | tr '[:upper:]' '[:lower:]')
          IMAGE="ghcr.io/$REPO_OWNER/$REPO_NAME:$TAG"

          echo "Running smoke test for image: $IMAGE"
          docker run -d -p 8000:8000 --name smoke $IMAGE
          sleep 5
          curl -f http://localhost:8000/health
          docker rm -f smoke

      - name: Prepare metrics
        run: |
          mkdir -p out
          if [ ! -f "out/metrics.json" ]; then
            echo '{"version":"${GITHUB_REF_NAME}"}' > out/metrics.json
          fi

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.PAT_TOKEN }}       # <-- use a PAT with release access
          name: "Release ${{ github.ref_name }}"
          body: |
            ðŸ§  **Automatic Release for** `${{ github.ref_name }}`
            
            âœ… Model retrained and validated  
            âœ… Docker image built and pushed to GHCR (multi-arch)  
            âœ… Container smoke test passed  
            âœ… Metrics + model + CHANGELOG uploaded  

            See [CHANGELOG.md](./CHANGELOG.md) for details.
          files: |
            model/model.joblib
            out/metrics.json
            CHANGELOG.md
          overwrite_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}