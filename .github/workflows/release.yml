name: üöÄ Full Release Pipeline

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    name: Build, Train, Dockerize & Release
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # 3Ô∏è‚É£ Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 4Ô∏è‚É£ Train/update model for this release
      - name: Train model
        run: |
          VERSION="${GITHUB_REF_NAME}"
          python model/train.py --version $VERSION --out model/model.joblib --metrics out/metrics.json --seed 42

      # 5Ô∏è‚É£ Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 6Ô∏è‚É£ Log in to GitHub Container Registry
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 7Ô∏è‚É£ Build Docker image
      - name: Build Docker image
        env:
          IMAGE: ghcr.io/${{ github.repository }}:${{ github.ref_name }}
        run: |
          docker build --build-arg MODEL_VERSION=${{ github.ref_name }} -t $IMAGE .

      # 8Ô∏è‚É£ Smoke test Docker container
      - name: Smoke test container
        env:
          IMAGE: ghcr.io/${{ github.repository }}:${{ github.ref_name }}
        run: |
          docker run -d -p 8000:8000 --name smoke $IMAGE
          sleep 5
          curl -f http://localhost:8000/health
          docker rm -f smoke

      # 9Ô∏è‚É£ Push Docker image
      - name: Push Docker image
        env:
          IMAGE: ghcr.io/${{ github.repository }}:${{ github.ref_name }}
        run: docker push $IMAGE

      # üîü Ensure metrics exist
      - name: Prepare metrics
        run: |
          mkdir -p out
          if [ ! -f "out/metrics.json" ]; then
            echo '{"version":"${GITHUB_REF_NAME}"}' > out/metrics.json
          fi

      # 1Ô∏è‚É£1Ô∏è‚É£ Create GitHub Release and upload assets
      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          name: "Release ${{ github.ref_name }}"
          body: |
            üß† **Automatic Release for** `${{ github.ref_name }}`

            ‚úÖ Model retrained and validated  
            ‚úÖ Docker image built and pushed to GHCR  
            ‚úÖ Container smoke test passed  
            ‚úÖ Metrics + model + CHANGELOG uploaded  

            See [CHANGELOG.md](./CHANGELOG.md) for details.
          files: |
            model/model.joblib
            out/metrics.json
            CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}