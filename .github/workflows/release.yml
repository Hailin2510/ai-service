name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU (for cross-platform)
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push image
        env:
          MODEL_VERSION: ${{ github.ref_name }}
        run: |
          TAG=${{ github.ref_name }}
          IMAGE=ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:${TAG}
          docker build --build-arg MODEL_VERSION=${TAG} -t ${IMAGE} .
          docker push ${IMAGE}

      - name: Run container smoke tests
        run: |
          TAG=${{ github.ref_name }}
          IMAGE=ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:${TAG}
          docker run -d --name smoke -p 8001:8000 ${IMAGE}
          sleep 3
          curl -sS http://127.0.0.1:8001/health | jq .
          curl -sS -X POST http://127.0.0.1:8001/predict -H "Content-Type: application/json" -d '{
            "age": 0.02,"sex": -0.044,"bmi": 0.06,"bp": -0.03,"s1": -0.02,"s2": 0.03,"s3": -0.02,"s4": 0.02,"s5": 0.02,"s6": -0.001
          }'
          docker rm -f smoke

      - name: Get metrics file from image and create release
        run: |
          TAG=${{ github.ref_name }}
          IMAGE=ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:${TAG}
          # extract metrics if present
          docker create --name tmp ${IMAGE}
          docker cp tmp:/app/out/metrics.json ./metrics.json || true
          docker rm tmp || true

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: metrics.json,CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}