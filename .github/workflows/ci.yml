name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Lint (flake8)
        run: |
          pip install flake8
          flake8 || true
      - name: Train baseline model (smoke)
        run: python model/train.py --version v0.1 --seed 42 --out model/model.joblib --metrics out/metrics.json
      - name: Run tests
        run: python -m pytest -q

  docker-smoke-test:
    needs: lint-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image for smoke test
        run: docker build --build-arg MODEL_VERSION=v0.1 -t ci-smoke-test:latest .

      - name: Run smoke test container
        run: |
          docker run -d -p 8000:8000 --name smoke ci-smoke-test:latest

          # Wait up to 60 seconds for FastAPI container to be ready
          for i in {1..12}; do
            if curl -f http://localhost:8000/health; then
              echo "✅ Healthcheck passed"
              break
            else
              echo "Waiting for container to start..."
              sleep 5
            fi
          done

          if ! curl -f http://localhost:8000/health; then
            echo "❌ Container failed to start"
            docker logs smoke
            docker rm -f smoke
            exit 1
          fi

          # Retry POST /predict up to 3 times
          for i in {1..3}; do
            if curl -X POST http://localhost:8000/predict \
              -H "Content-Type: application/json" \
              -d '{"age":50,"sex":1,"bmi":25.0,"bp":80,"s1":150,"s2":4,"s3":4,"s4":3,"s5":4,"s6":5}' \
              -f; then
              echo "✅ Predict endpoint OK"
              break
            else
              echo "Retrying predict endpoint..."
              sleep 2
            fi
          done

          docker rm -f smoke

  upload-artifacts:
    needs: [lint-and-test, docker-smoke-test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Upload model
        uses: actions/upload-artifact@v4
        with:
          name: model-joblib
          path: model/model.joblib
      - name: Upload metrics
        uses: actions/upload-artifact@v4
        with:
          name: training-metrics
          path: out/metrics.json
